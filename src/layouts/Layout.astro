---
import { ClientRouter } from "astro:transitions";
import { ROUTE } from "src/consts";

interface Props {
  title: string | undefined;
}

const { title } = Astro.props;

const fullTitle = title ? `no-manga - ${title}` : "no-manga";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Manga reader site" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{fullTitle}</title>
    <ClientRouter />
  </head>
  <body>
    <nav class="nav" transition:persist>
      <input id="nav__toggle" type="checkbox" />
      <label class="nav__btn" for="nav__toggle">
        <span></span>
      </label>

      <ul class="nav__box">
        <li><a class="nav__item" href={ROUTE.HOME()}>Home</a></li>
        <li><a class="nav__item" href={ROUTE.SEARCH()}>Search</a></li>
        <li><a class="nav__item" href={ROUTE.MANGA_LIST()}>Manga</a></li>
        <li><a class="nav__item" href={ROUTE.MANGAKA_LIST()}>Mangaka</a></li>
        <li><a class="nav__item" href={ROUTE.MAGAZINE_LIST()}>Magazine</a></li>
      </ul>
    </nav>

    <main class="content">
      <slot />
    </main>
  </body>
</html>
<style is:global>
  :root {
    --xs: 4px;
    --s: 8px;
    --m: 16px;
    --l: 32px;
    --xl: 64px;
    --br: 4px;

    --color-bg: #011d28;
    --color-text: #fcf7f8;
    --color-highlight: #51f6ee;
    --color-highlight-warn: #ff01fb;
    --color-black: #000000;

    --screen-s: 480px;
    --screen-m: 720px;
    --screen-l: 1080px;
  }
  html {
    font-family: system-ui, sans-serif;
    background-color: var(--color-bg);
  }

  *,
  *::before,
  *::after {
    overflow-wrap: break-word;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
  }

  h1,
  h2 {
    padding-bottom: var(--m);
    color: var(--color-text);
  }
  h3,
  h4 {
    padding-bottom: var(--s);
    color: var(--color-text);
  }
  h5,
  h6,
  p {
    padding-bottom: var(--xs);
    color: var(--color-text);
  }

  li {
    color: var(--color-text);
  }

  a {
    color: var(--color-highlight);
  }
</style>
<style lang="scss">
  .nav {
    height: 0;

    & > * {
      z-index: 8;
    }
  }

  #nav__toggle {
    opacity: 0;

    &:checked + .nav__btn > span {
      transform: rotate(45deg);
    }
    &:checked + .nav__btn > span::before {
      top: 0;
      transform: rotate(0deg);
    }
    &:checked + .nav__btn > span::after {
      top: 0;
      transform: rotate(90deg);
    }
    &:checked ~ .nav__box {
      left: 0 !important;
    }
  }

  .nav__btn {
    position: fixed;
    top: var(--s);
    left: var(--s);
    width: var(--l);
    height: var(--l);
    z-index: 9 !important;
    cursor: pointer;

    @media (min-width: 1080px) {
      display: none;
    }

    & > span,
    & > span::before,
    & > span::after {
      display: block;
      position: absolute;
      width: 100%;
      height: 4px;
      background-color: var(--color-highlight);
      transition-duration: 0.2s;
    }

    & > span {
      top: 15px;

      &:before {
        content: "";
        top: -10px;
      }

      &:after {
        content: "";
        top: 10px;
      }
    }
  }

  .nav__box {
    display: block;
    position: fixed;
    top: 0;
    left: -100%;
    height: 100%;
    width: 128px;
    padding-top: var(--xl);
    border-right: 1px solid var(--color-highlight);
    background-color: var(--color-bg);
    transition-duration: 0.2s;

    @media (min-width: 1080px) {
      left: 0 !important;
    }
  }

  .nav__item {
    display: block;
    padding: var(--s) var(--m);
    text-decoration: none;
    transition-duration: 0.2s;

    &:hover {
      color: var(--color-bg);
      background-color: var(--color-highlight);
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    height: 100vh;
    max-height: 100vh;
    padding: var(--s);
    padding-top: calc(var(--l) + var(--s));
    transition-duration: 0.2s;

    @media (min-width: 1080px) {
      padding: var(--m);
      padding-left: calc(128px + var(--m));
    }
  }
</style>
